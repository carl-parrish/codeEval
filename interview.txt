Synapse Interview

Please type (no copying/pasting, we want to see how you answer the questions, not just the answers) your answers below the question.

We will be using the chat in the lower right to communicate during the interview. If you have a question please feel free to ask.


+++ Questions +++

Write a function for summing all of the numbers from 1 to 100 (inclusive).


function sum()
{
    $sum = 0;
    for($i = 0; $i <= 100; $i++){
        $sum += $i;
    }
    
    return $sum;
}

print sum();


Now write a function that only sums the even numbers between 1 and 100 (inclusive).

function even_sum()
{
    $sum = 0; 
    for($i = 0; $i <=100; $i){
        if ($i & 1) == 0 {
            $sum += $i;
        }
    }
        return $sum;
}
print even_sum();
    

Write a function to print out the grade-school multiplication table up to 12x12 (example:https://gist.github.com/e313800592e94abf3973 )

function multiply(){

#outerloop
for($i = 1; $i <= 12; $i++){
    #inner loop
    for ($j=1; $j <= 12; $j++){
        $ans = $j * $i;
        printf("%4d ", $ans);
    }
    print "\n";
}
}

Write a function that determines whether or not a value exists in an array. This function should not use any existing array _* functions from PHP or in_array().


function is_in($value,$array){
     foreach($array as $index){
         if ($index === $value)
             return true;
    }
    return false;
}

$myArray = array("123", "abc", 123);

print is_in("abc", $myArray);
?>

Now write a function that can search multidimensional arrays (without using in_array() or any array _* functions).

#!/usr/bin/php
<?php
function check_value($array, $value, $match = false)
{
	foreach ($array as $index){
		if (is_array($index)) {
    	   $result = check_value($index, $value, &$match);
    	}elseif ($index === $value){
    		$match = true;
    	} 
    	
	}

 return $match;
}

$myArray = array("carl",array('parrish','louis',"abc"), "whatever","123" );


var_dump( check_value($myArray, "abc"));
?>

What is a singleton? Write a singleton implementation in php.
Its a design pattern where you can only instance the object once. in php I generally do it by making the constructor static but you can also use __get and ___set to create one. Useful for Web applications that are using a Controller pattern. 

class Singleton {
    private static $instance = false; 
    public $property;
    
    private function __construc() {}
    
    public static function getInstance()
    {
        if(self::$instance === false){
            self::$instance = new Singleton;
        }
    return self::$instance;
    }
}

$first = Singleton::getInstance();
$next = Singleton::getInstance();

$first->property = "hello world";

print $next->property;